<!-- Main Window for the GrammarLlama application -->
<Window x:Class="GrammarLlama.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GrammarLlama"
        mc:Ignorable="d"
        Title="Grammar Llama" Height="600" Width="1000">

    <!-- Window-wide resources -->
    <Window.Resources>
        <!-- Custom converters for UI logic -->
        <local:BoolToAlignmentConverter x:Key="BoolToAlignmentConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BoolToDockConverter x:Key="BoolToDockConverter"/>
        <local:BoolToAvatarConverter x:Key="BoolToAvatarConverter"/>
        <local:BoolToMarginConverter x:Key="BoolToMarginConverter"/>
        <local:BoolToBackgroundConverter x:Key="BoolToBackgroundConverter"/>
        <local:BoolToForegroundConverter x:Key="BoolToForegroundConverter"/>

        <!-- Style for rounded TextBox -->
        <Style x:Key="RoundedTextBox" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border CornerRadius="10" Background="{DynamicResource TextBoxBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="10,5"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}"/>
        </Style>

        <!-- Style for rounded Button -->
        <Style x:Key="RoundedButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" Background="{DynamicResource AccentBrush}" BorderBrush="{DynamicResource AccentBrush}" BorderThickness="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}"/>
            <Setter Property="Padding" Value="15,5"/>
        </Style>

        <!-- Style for the settings popup -->
        <Style x:Key="SettingsPopup" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource PopupBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Width" Value="300"/>
        </Style>

        <!-- Style for circular Image -->
        <Style x:Key="CircularImage" TargetType="Image">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Stretch" Value="UniformToFill"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Clip">
                <Setter.Value>
                    <EllipseGeometry Center="30,30" RadiusX="30" RadiusY="30"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for theme-aware ComboBox -->
        <Style x:Key="ThemeAwareComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  Background="{TemplateBinding Background}"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                            <Grid>
                                                <ContentPresenter Margin="5,2" ContentSource="Content" />
                                                <Path x:Name="Arrow" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,5,0"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="5,2"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left" />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource ComboBoxBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Main Grid layout -->
    <Grid Background="{DynamicResource PrimaryBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Left side: Chat history -->
        <Border Background="{DynamicResource SecondaryBackgroundBrush}" Grid.Column="0">
            <DockPanel>
                <TextBlock DockPanel.Dock="Top" Text="Conversations" FontWeight="Bold" Margin="10" Foreground="{DynamicResource PrimaryTextBrush}"/>
                <ListBox x:Name="ConversationList" Background="Transparent" SelectionChanged="ConversationList_SelectionChanged">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0,5">
                                <TextBlock Text="{Binding DisplayName}" FontWeight="Bold" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                <TextBlock Text="{Binding LastMessage}" TextTrimming="CharacterEllipsis" MaxWidth="280" Foreground="{DynamicResource SecondaryTextBrush}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Border>

        <!-- Right side: Chat window -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Chat header -->
            <DockPanel Grid.Row="0" Background="{DynamicResource PrimaryBackgroundBrush}">
                <TextBlock Text="AI Chat" FontWeight="Bold" VerticalAlignment="Center" Margin="10" Foreground="{DynamicResource PrimaryTextBrush}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="➕" Margin="5" Width="30" Height="30" Click="New_Chat_Click" Style="{StaticResource RoundedButton}"/>
                    <Button x:Name="SettingsButton" Content="⚙" Margin="5" Width="30" Height="30" Click="SettingsButton_Click" Style="{StaticResource RoundedButton}"/>
                </StackPanel>
            </DockPanel>

            <!-- Settings Popup -->
            <Popup x:Name="SettingsPopup" PlacementTarget="{Binding ElementName=SettingsButton}" 
       Placement="Bottom" StaysOpen="False">
                <Border Style="{StaticResource SettingsPopup}">
                    <StackPanel>
                        <TextBlock Text="Settings" FontWeight="Bold" Margin="0,0,0,10" Foreground="{DynamicResource PrimaryTextBrush}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="API Endpoint:" Margin="0,5,5,0" Foreground="{DynamicResource PrimaryTextBrush}"/>
                            <TextBlock Text="❓" ToolTip="The URL of the API endpoint for the AI model" Margin="0,5,0,0" HorizontalAlignment="Right" Foreground="{DynamicResource SecondaryTextBrush}"/>
                        </StackPanel>
                        <TextBox x:Name="ApiEndpointTextBox" Margin="0,5,0,0" Style="{StaticResource RoundedTextBox}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Model:" Margin="0,10,5,0" Foreground="{DynamicResource PrimaryTextBrush}"/>
                            <TextBlock Text="❓" ToolTip="The name of the AI model to use" Margin="0,10,0,0" HorizontalAlignment="Right" Foreground="{DynamicResource SecondaryTextBrush}"/>
                        </StackPanel>
                        <TextBox x:Name="ModelTextBox" Margin="0,5,0,0" Style="{StaticResource RoundedTextBox}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="System:" Margin="0,10,5,0" Foreground="{DynamicResource PrimaryTextBrush}"/>
                            <TextBlock Text="❓" ToolTip="The system prompt to set the AI's behavior" Margin="0,10,0,0" HorizontalAlignment="Right" Foreground="{DynamicResource SecondaryTextBrush}"/>
                        </StackPanel>
                        <TextBox x:Name="SystemTextBox" Margin="0,5,0,0" TextWrapping="Wrap" AcceptsReturn="True" Height="60" Style="{StaticResource RoundedTextBox}"/>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <TextBlock Text="Theme:" VerticalAlignment="Center" Margin="0,0,10,0" Foreground="{DynamicResource PrimaryTextBrush}"/>
                            <ComboBox x:Name="ThemeComboBox" SelectedIndex="0" Width="100" Style="{StaticResource ThemeAwareComboBox}">
                                <ComboBoxItem Content="Light"/>
                                <ComboBoxItem Content="Dark"/>
                            </ComboBox>
                        </StackPanel>
                        <Button Content="Save" Margin="0,10,0,0" Click="SaveSettings_Click" Style="{StaticResource RoundedButton}"/>
                    </StackPanel>
                </Border>
            </Popup>
            <!-- Chat messages -->
            <ScrollViewer x:Name="MessageListScrollViewer" Grid.Row="1">
                <ItemsControl x:Name="MessageList" ItemsSource="{Binding CurrentChat}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Background="{Binding IsUser, Converter={StaticResource BoolToBackgroundConverter}}" 
                                    CornerRadius="10" 
                                    Padding="10" 
                                    Margin="10,5"
                                    HorizontalAlignment="{Binding IsUser, Converter={StaticResource BoolToAlignmentConverter}}"
                                    MaxWidth="300">
                                <DockPanel>
                                    <Image DockPanel.Dock="{Binding IsUser, Converter={StaticResource BoolToDockConverter}}"
                                           Source="{Binding IsUser, Converter={StaticResource BoolToAvatarConverter}}"
                                           Style="{StaticResource CircularImage}" 
                                           Margin="{Binding IsUser, Converter={StaticResource BoolToMarginConverter}}"
                                           Width="48" Height="48"/>
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Text="{Binding Content, Mode=OneWay}" 
                                                     TextWrapping="Wrap"
                                                     IsReadOnly="True"
                                                     BorderThickness="0"
                                                     Background="Transparent"
                                                     IsHitTestVisible="True"
                                                     Focusable="True"
                                                     Foreground="{Binding IsUser, Converter={StaticResource BoolToForegroundConverter}}"
                                                     Grid.Column="0"/>
                                            <Button Content="📋" 
                                                    HorizontalAlignment="Center" 
                                                    VerticalAlignment="Top" 
                                                    Margin="5,0,0,0"
                                                    Click="CopyResponse_Click"
                                                    Grid.Column="1">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource RoundedButton}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsUser}" Value="False">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                        <TextBlock Text="{Binding Time}" 
                                                   FontSize="10" 
                                                   HorizontalAlignment="Right"
                                                   Foreground="{Binding IsUser, Converter={StaticResource BoolToForegroundConverter}}"/>
                                    </StackPanel>
                                </DockPanel>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!-- Input area -->
            <Grid Grid.Row="2" Background="{DynamicResource PrimaryBackgroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="InputTextBox" Grid.Column="0" Margin="10" 
                         VerticalAlignment="Center" Style="{StaticResource RoundedTextBox}"
                         AcceptsReturn="True"
                         TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto"
                         Height="60"/>
                <Button x:Name="SendButton" Grid.Column="1" Margin="0,10,10,10"
                        VerticalAlignment="Center" Click="SendMessage_Click" Style="{StaticResource RoundedButton}">
                    <TextBlock TextAlignment="Center">
                        <Run Text="Send"/>
                        <LineBreak/>
                        <Run Text="Ctrl+Enter" FontSize="10"/>
                    </TextBlock>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>